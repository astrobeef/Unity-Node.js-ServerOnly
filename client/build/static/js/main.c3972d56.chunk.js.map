{"version":3,"sources":["components/pages/Home.js","components/pages/Login.js","components/pages/Play.js","components/pages/Data.js","components/displayPlayers.js","components/pages/About.js","components/NavTabs.js","utils/API.js","App.js","aws-exports.js","index.js"],"names":["Home","props","className","type","onClick","signOut","Login","useEffect","isLoggedIn","needsVerify","id","placeholder","name","onChange","handleInputChange","value","handleVerify","handleResendVerification","to","isRegistered","htmlFor","aria-describedby","signIn","signUp","handleHasRegistered","Play","buildString","build","hasDownloaded","displaySuccess","setAccessToken","handleDownloadLost","href","handleDownload","target","download","Data","DB_getPlayers","DB_getMessages","players","displayedAPlayer","map","player","key","Math","random","username","displayPlayers","generateMessages","message","handleSendMessage","About","NavTabs","getPlayers","fetch","then","response","status","console","error","warn","_id","connection_id","connected","__v","json","data","catch","err","log","getUser","createUser","userData","method","body","JSON","stringify","headers","updateUser","payload","getMessages","createMessage","CURRENT_BUILD","App","useState","setIsLoggedIn","setNeedsVerify","setIsRegistered","setPlayers","loginInfo","setLoginInfo","setHasDownloaded","active","connection","setConnection","messages","setMessages","event","persist","accessToken","handleCopyAccessToken","AUTHO_SetAccessToken","Auth","currentAuthenticatedUser","user","AUTHO_RegisterUser","localStorage","getItem","setInterval","exact","path","render","AUTHO_signIn","AUTHO_signUp","handleLoginInputChange","AUTHO_signOut","trim","length","API","db_players","DB_getUser","Promise","resolve","reject","db_User","db_Messages","slice","setItem","removeItem","token","parentNode","atr","dummyTextArea","document","createElement","appendChild","select","execCommand","removeChild","setTimeout","inputMessage","preventDefault","confirmSignUp","verification","AUTHO_UponSuccessfulSignIn","e","resendSignUp","password","email","DB_User","alert","attributes","currentSession","sessionData","getAccessToken","getJwtToken","DB_updateUser","DB_registerUser","awsmobile","Amplify","configure","config","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.c3972d56.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Home(props) {\n\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n\n                    <button type=\"button\" className=\"btn btn-primary\" onClick={props.signOut}>\n                        <h2 className = \"m-2\">Sign Out</h2>\n                    </button>\n\n            </header>\n        </div>\n    )\n}\n\nexport default Home;","import React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction Login(props) {\n\n  useEffect(() => {\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <header className={props.isLoggedIn ? \"App-header\" : \"App-header bg-blue\"}>\n\n        {props.needsVerify ? <div>\n\n          <h1>Enter Verification code from your email</h1>\n\n          <input type=\"verification\" className=\"form-control\" id=\"verification\" placeholder=\"Verification code\" name=\"verification\" onChange={props.handleInputChange}></input>\n\n                <button type=\"submit\" value=\"Submit\" className=\"btn btn-primary mt-2 mr-3\" onClick={props.handleVerify}><h2>Submit Code</h2></button>\n\n                <button type=\"submit\" value=\"Submit\" className=\"btn btn-primary mt-2 ml-3\" onClick={props.handleResendVerification}><h2>Submit Code</h2></button>\n                \n\n        </div>\n        : \n\n          <div>\n        {props.isLoggedIn ? <Link to=\"/about\">About</Link> :\n          props.isRegistered ?\n            <div><h1 className=\"header-light\"> Welcome back!</h1>\n              <form>\n                <div className=\"form-group\">\n                  <label htmlFor=\"username\" className=\"header-light\">Username</label>\n                  <input type=\"username\" className=\"form-control\" id=\"username\" aria-describedby=\"usernameHelp\" placeholder=\"Enter username\" name=\"username\" onChange={props.handleInputChange}></input>\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"password\" className=\"header-light\">Password</label>\n                  <input type=\"password\" className=\"form-control\" id=\"password\" placeholder=\"Password\" name=\"password\" onChange={props.handleInputChange}></input>\n                </div>\n                <button type=\"submit\" value=\"Submit\" className=\"btn btn-primary\" onClick={props.signIn}><h2>Sign in</h2></button>\n              </form>\n            </div>\n            :\n            <div><h1> Greetings Newcomer</h1>\n              <form>\n                <div className=\"form-group\">\n                  <label htmlFor=\"email\" className=\"header-light\">Email</label>\n                  <input type=\"email\" className=\"form-control\" id=\"email\" placeholder=\"Email\" name=\"email\" onChange={props.handleInputChange}></input>\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"username\" className=\"header-light\">Username</label>\n                  <input type=\"username\" className=\"form-control\" id=\"username\" aria-describedby=\"usernameHelp\" placeholder=\"Enter username\" name=\"username\" onChange={props.handleInputChange}></input>\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"password\" className=\"header-light\">Password</label>\n                  <input type=\"password\" className=\"form-control\" id=\"password\" placeholder=\"Password\" name=\"password\" onChange={props.handleInputChange}></input>\n                </div>\n              </form>\n              <button type=\"submit\" value=\"Submit\" className=\"my-3 btn btn-primary\" onClick={props.signUp}><h2>Sign up</h2></button>\n\n              <h5 className=\"header-light\"> Already have an accout?</h5>\n\n              <button type=\"submit\" value=\"Submit\" className=\"btn btn-primary\" onClick={props.handleHasRegistered}><h4>Sign in</h4></button>\n            </div>\n\n        }</div>\n      }\n\n\n      </header>\n\n    </div>\n\n  )\n}\n\n\nexport default Login;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction Play(props) {\n\n  const buildString = \"/assets/game-builds/\" + props.build + \".zip\";\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header light-yellow\">\n\n        {props.hasDownloaded ?\n          <div><h1>You've downloaded the game!</h1>\n\n            <h4 className=\"my-3\">{props.displaySuccess ? <span className = \"highlight\">Copied to clipboard!</span> : <span>Get your access token here</span>\n            }</h4>\n\n              <button id = \"data-token\" type=\"button\" className=\"btn btn-primary\" onClick={props.setAccessToken}>\n                <h2 className=\"m-2\">Access Token</h2>\n              </button>\n\n              <h5 className=\"mt-5\">If you can't find the download in your downloads folder, press the button below</h5>\n\n              <button onClick={props.handleDownloadLost} type=\"button\" className=\"btn btn-warning my-3\">\n                Lost Download\n              </button>\n          </div>\n            :\n          <div><h1>Download Instructions</h1>\n              <h5>If you don't have software to open ZIP files, follow the WinRAR link below.</h5>\n              <h5>Once you've downloaded the ZIP file, open the file and run the 'launch.exe' file to play.</h5>\n\n              <h4 className=\"mt-4\">WinRAR 'trial' download</h4>\n              <a className=\"winRAR\" href=\"https://www.rarlab.com/rar/winrar-x64-580.exe\"> Windows </a>\n              <a className=\"winRAR\" href=\"https://www.rarlab.com/rar/rarosx-5.8.0.tar.gz\"> Mac </a>\n\n              <h4 className=\"mt-3 mb-2\">Download my Game!</h4>\n              <button id = \"download-btn\" htmlFor=\"download-link\" type=\"button\" className=\"btn btn-primary mt-3\" onClick = {props.setAccessToken}>\n                <Link id=\"download-link\" onClick={props.handleDownload} to={buildString} target=\"_blank\" download ><h3>Download</h3></Link>\n              </button>\n            </div>\n\n            }\n    \n      </header>\n\n    </div>\n      )\n    }\n    \nexport default Play;","import React, { useEffect } from \"react\";\n\n//Components\nimport displayPlayers from \"../displayPlayers\";\n\nfunction Data(props) {\n\n  useEffect(() => {\n    props.DB_getPlayers();\n    props.DB_getMessages();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <header className=\"light-yellow\">\n\n        <h1 className = \"mt-20 py-5\">Data</h1>\n\n        <div className=\"row justify-content-center\">\n          <div className=\"col-5\">\n\n            <h3>Connected Players</h3>\n\n            {props.players ? displayPlayers(props) : <p>No players connected</p>}\n          </div>\n          <div className=\"col-5\">\n\n            <h3>Global Message Board</h3>\n            <ul className=\"list-group text-left\">\n              {props.generateMessages()}\n              <input id = \"message-input\" name = \"message\" className = \"list-group-item my-1\" type = \"text\" placeholder = \"Type a message...\" onChange = {props.handleInputChange} value = {props.message}></input>\n              <button className = \"list-group-item col-3\" onClick={props.handleSendMessage}>Send message</button>\n            </ul>\n\n          </div>\n        </div>\n\n      </header>\n\n    </div>\n  )\n}\n\nexport default Data;","import React from \"react\";\n\n/**\n * Displays our users state in an HTML div.\n * @param {Object} props - Props MUST contain a 'players' array to be used in this component.\n * @returns HTML rendered component.\n */\nexport default function displayPlayers(props) {\n\n    const {players} = props;        //Pull players off of props.\n\n    let displayedAPlayer = false;\n\n    //Return the contents to be rendered.\n    return (\n        <div>\n            {/* Map over each 'player' in the array 'players' */}\n            {players.map((player) => {\n                player.key = Math.random();\t\t//Give the player a random key value.\n                //Return a <DIV> for each 'player' within 'players'\n                return (\n                    <div>\n                        {player.username === \"Default_Player\" ? null : <h3>{player.username}{displayedAPlayer = true}</h3>}\n                        <br></br>\n                    </div>\n                )\n            })}\n\n            {displayedAPlayer ? null : <span>There are no players connected to any game lobbies</span>}\n        </div>)\n}","import React from \"react\";\n\nfunction About(props) {\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header light-yellow\">\n\n        <h1>About Me</h1>\n        <h3>I'm Brian Graf</h3>\n\n      </header>\n\n\n    </div>\n  )\n}\n\nexport default About;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction NavTabs(props) {\n\n    if (!props.isLoggedIn) {\n        return null;\n    }\n\n    return (\n        <ul className=\"nav justify-content-center pt-2\">\n            {/* <li className=\"nav-item\">\n                <Link to=\"/home\" className=\"nav-link\">\n                    <h3>Home</h3>\n        </Link>\n            </li> */}\n            {props.isLoggedIn ? null :\n                <li className=\"nav-item\">\n                    <Link to=\"/login\" className=\"nav-link\">\n                        <h3>Login/Register</h3>\n                    </Link>\n                </li>\n            }\n            <li className=\"nav-item\">\n                <Link to=\"/play\" className=\"nav-link\">\n                    <h3>Download</h3>\n                </Link>\n            </li>\n            <li className=\"nav-item\">\n                <Link to=\"/data\" className=\"nav-link\">\n                    <h3>Data</h3>\n                </Link>\n            </li>\n            <li className=\"nav-item\">\n                <Link to=\"/about\" className=\"nav-link\">\n                    <h3>About</h3>\n                </Link>\n            </li>\n            <li className=\"nav-item\">\n                <Link to=\"/home\" className=\"nav-link\">\n                    <h3>Sign Out</h3>\n                </Link>\n            </li>\n        </ul>\n\n    );\n}\n\nexport default NavTabs;\n","export default {\r\n    getPlayers: function () {\r\n\r\n        return fetch(\"api/players\")\r\n            .then(function (response) {\r\n                if (response.status !== 200) {\r\n                    console.error(`problem found with status code : ${response.status}`);\r\n                    console.warn(`Returning dummy response`);\r\n\r\n                    const dummyData = [\r\n                        {\r\n                            _id: \"12345abc_dummy\",\r\n                            connection_id: \"D5e315_dummy\",\r\n                            username: \"Dummy Player\",\r\n                            connected: true,\r\n                            __v: 0,\r\n                            key: 0.333334\r\n                        }\r\n                    ]\r\n\r\n                    return dummyData;\r\n                }\r\n\r\n                return response.json().then(function (data) {\r\n                    return data;\r\n                })\r\n            })\r\n            .catch(function (err) {\r\n                console.log(`fetch error : ${err}`);\r\n            })\r\n\r\n    },\r\n\r\n    getUser: function (username) {\r\n        return fetch(`/api/users/${username}`)\r\n            .then(function (response) {\r\n                if (response.status !== 200) {\r\n                    console.error(`problem found with status code : ${response.status}`);\r\n                }\r\n\r\n                return response.json().then(function (data) {\r\n                    return data;\r\n                })\r\n            })\r\n            .catch(function (err) {\r\n                console.log(`fetch error : ${err}`);\r\n            })\r\n    },\r\n\r\n    createUser: function (userData) {\r\n\r\n        return fetch(\r\n            \"api/users/create\", {\r\n            method: \"POST\",\r\n            body: JSON.stringify(userData),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        }\r\n        )\r\n            .then(function (response) {\r\n                if (response.status !== 200) {\r\n\r\n                    return response.status;\r\n                }\r\n\r\n                return response.json().then(function (data) {\r\n                    return data;\r\n                })\r\n            })\r\n            .catch(function (err) {\r\n                console.log(`fetch error : ${err}`);\r\n            })\r\n    },\r\n\r\n    updateUser: function (username, payload) {\r\n        return fetch(\r\n            `/api/users/${username}`, {\r\n            method: \"PUT\",\r\n            body: JSON.stringify({ ...payload, username }),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        })\r\n            .then(function (response) {\r\n                if (response.status !== 200) {\r\n\r\n                    return response.status;\r\n                }\r\n\r\n                return response.json().then(function (data) {\r\n                    return data;\r\n                })\r\n            })\r\n            .catch(function (err) {\r\n                console.log(`fetch error : ${err}`);\r\n            })\r\n    },\r\n    getMessages: function () {\r\n\r\n        return fetch(\"api/messages\")\r\n            .then(function (response) {\r\n                return response.json().then(function (data) {\r\n                    return data;\r\n                })\r\n            })\r\n            .catch(function (err) {\r\n                console.log(`fetch error : ${err}`);\r\n            })\r\n    },\r\n    createMessage: function (payload) {\r\n        return fetch(\"/api/messages/create\", {\r\n            method: \"POST\",\r\n            body: JSON.stringify(payload),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        }\r\n        )\r\n            .then(function (response) {\r\n                if (response.status !== 200) {\r\n\r\n                    return response.status;\r\n                }\r\n\r\n                return response.json().then(function (data) {\r\n                    return data;\r\n                })\r\n            })\r\n            .catch(function (err) {\r\n                console.log(`fetch error : ${err}`);\r\n            })\r\n    }\r\n}","/** ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n * App.js - This script establishes our React client, setting up the routes for our web page.  It also houses many methods which are intergral to our application : handler methods, check methods, and authentication methods (using AWS Amplify).\n * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/\n\n/*-------------------*/\n/*----NPM Imports----*/\n/*-------------------*/\n\nimport React, { useState, useEffect } from 'react';         //React Import\nimport { BrowserRouter as Router, Route, Redirect } from \"react-router-dom\";\nimport { Auth } from \"aws-amplify\";\t\t\t\t\t\t\t//AWS Amplify Authentication import\n// import socketIOClient from \"socket.io-client\";\n\n/*-------------------*/\n/*---Local Imports---*/\n/*-------------------*/\n\nimport './App.css';\n\n//Pages\nimport Home from \"./components/pages/Home\";\nimport Login from \"./components/pages/Login\";\nimport Play from \"./components/pages/Play\";\nimport Data from \"./components/pages/Data\";\nimport About from \"./components/pages/About\";\n\n//Components\nimport NavTabs from './components/NavTabs';\n\n//Utils\nimport API from \"./utils/API\";\n\n\n/*-------------------*/\n/*--Local Variables--*/\n/*-------------------*/\n\nconst CURRENT_BUILD = \"Buildv1.7-H\";\t\t//The name of our current game build, found in /public/assets/game-builds/\n\n/*-------------------*/\n/*------- App -------*/\n/*-------------------*/\n\nfunction App() {\n\n  //---State\n\n  const [isLoggedIn, setIsLoggedIn] = useState([]);\t\t\t\t//A boolean value whether the user is logged in or not.\n  const [needsVerify, setNeedsVerify] = useState(false);\n\n  const [isRegistered, setIsRegistered] = useState(false);      \t//A boolean value whether the user has registered or not.\n\n  const [players, setPlayers] = useState([]);\t\t\t\t\t\t//The players connected to the server\n\n  const [loginInfo, setLoginInfo] = useState({ name: \"login\", message : \"\" });\t//The user's login information: username, password.\n\n  const [hasDownloaded, setHasDownloaded] = useState(false);\t\t//A boolean value whether the user has downloaded the game or not.\n\n  const [connection, setConnection] = useState({ active: false });\n\n  const [messages, setMessages] = useState(null);\n\n  //---Use Effect\n  //-------Runs when state changes.\n  useEffect(() => {\n    AUTHO_checkUser();\n    checkIfDownloaded();\n\n    if (!connection.active) {\n      setConnection({ ...connection, active: true });\n\n      setInterval(() => {\n        DB_getPlayers();\n        DB_getMessages();\n      }, 10000);\n    }\n\n  }, []);\n\n  function setAccessToken(event) {\n\n    event.persist();\n\n    if (!connection.accessToken) {\n      AUTHO_SetAccessToken(loginInfo.username, event);\n    }\n    else {\n      console.log(\"Now that's efficency!\");\n      handleCopyAccessToken(event.target, connection.accessToken);\n    }\n  }\n\n  //Return the render content for the web page.\n  return (\n    <div>\n      <Router>\n\n        <NavTabs isLoggedIn={isLoggedIn ? true : false} />\n        <Route exact path=\"/login\" render={(props) => <Login {...props} isRegistered={isRegistered ? true : false} signIn={AUTHO_signIn} signUp={AUTHO_signUp} handleInputChange={handleLoginInputChange} isLoggedIn={isLoggedIn} handleHasRegistered={handleHasRegistered} needsVerify={needsVerify} handleVerify = {handleVerify} handleResendVerification = {handleResendVerification}/>} />\n        <Route exact path=\"/home\" render={(props) => <Home {...props} signOut={AUTHO_signOut} />} />\n        <Route exact path=\"/play\" render={(props) => <Play {...props} handleDownload={handleDownload} handleDownloadLost={handleDownloadLost} hasDownloaded={hasDownloaded} build={CURRENT_BUILD} setAccessToken={setAccessToken} displaySuccess={connection.displaySuccess} />} />\n        <Route exact path=\"/data\" render={(props) => <Data {...props} players={players} DB_getPlayers={DB_getPlayers} generateMessages={generateMessages} DB_getMessages={DB_getMessages} handleInputChange={handleLoginInputChange} message = {loginInfo.message} handleSendMessage = {handleSendMessage}/>} />\n        <Route exact path=\"/about\" render={(props) => <About {...props} />} />\n\n        <Route path=\"/*\" render={(props) => { if (!isLoggedIn) return (<Redirect to=\"/login\"></Redirect>) }} />\n      </Router>\n    </div>\n\n  );\n\n  function generateMessages() {\n    if(messages && messages[0].message.trim().length > 1){\n      return messages.map(message => <li key={Math.random()} className=\"list-group-item\"><b>{message.username} : </b>{message.message}</li>);\n    }\n    else{\n      return null;\n    }\n  }\n\n  /*------------------------*/\n  /*-- Database Functions --*/\n  /*------------------------*/\n\n\t/**\n\t * Returns the players from our Mongo Database.\n\t */\n  function DB_getPlayers() {\n    API.getPlayers()\t//Call the getPlayers() method off of our API object, which was imported from Utils.\n      .then((db_players) => {\t\t//Then, with the retrieved data, ...\n        setPlayers(db_players);\t\t//Set our players state to the retrieved data.\n      }\n      )\n      .catch((err) => {\n        console.error(err);\n      });\n  };\n\n  /**\n   * Registers the user into our Mongo Database.\n   * @param {string} username - The user to be added to the database.\n   */\n  function DB_registerUser(username) {\n\n    /*Check if the user is already registered*/ const DB_isRegistered = false; // For now, we assume no.\n\n    const payload = { username };\n\n    //CHECK IF USER IS REGISTERED\n\n    DB_getUser(username).then((DB_User) => {\n\n      if (!DB_User) {\n        //If we did not find the user, then create a reference.\n        API.createUser(payload)\n          .then((db_User) => {\n          })\n          .catch((err) => {\n            console.error(err);\n          });\n      }\n      else {\n        //Do nothing; user is already registered in MongoDB.\n      }\n\n    }).catch((err) => {\n\n      console.log(err);\n    });\n\n  };\n\n  /**\n   * Updates the access token of the user.\n   * @param {String} username - The user to be updated in the MongoDB.\n   * @param {Object} payload - The information to be changed.  Must match keys in the User Model.\n   */\n  function DB_updateUser(username, payload) {\n\n    API.updateUser(username, payload)\n      .then((db_User) => {\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n\n  }\n\n  /**\n   * Finds the user.  Returns true if the user is found, false if not.\n   * @param {string} username - The user to be found in the MongoDB.\n   */\n  function DB_getUser(username) {\n\n    return new Promise(function (resolve, reject) {\n\n      API.getUser(username)\n        .then((db_User) => {\n\n          if (db_User.length > 0) {\n            resolve(JSON.stringify(db_User));\n          }\n          else {\n            resolve(null);\n          }\n\n        }).catch((err) => {\n          console.error(err);\n          reject(err);\n        });\n    })\n  }\n\n  function DB_getMessages() {\n    return new Promise(function (resolve, reject) {\n\n      API.getMessages()\n        .then((db_Messages) => {\n          if (db_Messages && db_Messages.length > 0) {\n            if(db_Messages.length > 5){\n              console.log(\"Too many messages in MongoDB to display them all\");\n              setMessages(db_Messages.slice(db_Messages.length - 5, db_Messages.length));\n            }\n            else{\n              setMessages(db_Messages);\n            }\n          }\n\n          resolve(db_Messages);\n        })\n        .catch((err) => {\n          console.error(err);\n          reject(err);\n        });\n\n    })\n  };\n\n  function DB_createMessage(username) {\n\n  };\n\n  /*-----------------------*/\n  /*-- Handler Functions --*/\n  /*-----------------------*/\n\n  /** Handle Login Input Change\n   * Updates the state of the login based on the input name and value\n   * @param {Object} event - If an object, the change event fired when the input value is changed.\n   * @param {String} event - If a string, the value to be set to the email.\n   */\n  function handleLoginInputChange(event) {\n\n\n    const { target } = event;\t\t//Pull the target off of our event.\n    const value = target.value;\t\t//Set a reference for our target's value (the user's input).\n    const { name } = target;\t\t//Pull the name off of our target (the element to be changed by the input).\n\n    \n    console.log(name);\n    console.log(value);\n\n    setLoginInfo({ ...loginInfo, [name]: value });\t\t//Set the key of 'name' to the value of 'value', so the user's input alters their login info.\n  }\n\n  /** Handle Download\n   * This does not download the game, but instead sets a reference within the local storage that we have downloaded the game.\n   * @param {Object} event - The fired event from the action.\n   */\n  function handleDownload(event) {\n\n    localStorage.setItem(\"hasDownloaded\", true);\t\t//Set an item in localStorage so we can reference it later to check if the user has downloaded the game.\n\n    //If 'hasDownloaded' is not already true, then set it to true.\n    if (hasDownloaded !== true) {\n      setHasDownloaded(true);\t\t//Alter the state of 'hasDownloaded' to true\n    }\n  }\n\n  /** Handle Download Lost\n   * This is fired if the user needs to download the game again.  The local storage 'hasDownloaded' item is removed.\n   * @param {Object} event - The fired event from the action.\n   */\n  function handleDownloadLost(event) {\n\n    localStorage.removeItem(\"hasDownloaded\");\t\t//Remove the item 'hasDownloaded' so we can reference it later to check that the user has NOT downloaded the game.\n\n    //If 'hasDownloaded' is not already false, then set it to false.\n    if (hasDownloaded !== false) {\n      setHasDownloaded(false);\t\t//Alter the state of 'hasDownloaded to false.\n    }\n  }\n\n  function handleCopyAccessToken(target, token) {\n    if (target) {\n      if (target.id !== \"data-token\" && target.id !== \"download-btn\") {\n        console.log(\"We did not click on the button\");\n\n        handleCopyAccessToken(target.parentNode, token);\n      }\n      else {\n        const atr = token;\n\n        const dummyTextArea = document.createElement(\"textarea\");\n\n        dummyTextArea.value = atr;\n        document.body.appendChild(dummyTextArea);\n        dummyTextArea.select();\n\n        document.execCommand('copy');\n        document.body.removeChild(dummyTextArea);\n\n        console.log(\"Copied to clipboard!\");\n\n        if (!connection.displaySuccess) {\n          setConnection({ ...connection, \"accessToken\": atr, displaySuccess: true });\n\n          setTimeout(() => {\n            setConnection({ ...connection, \"accessToken\": atr, displaySuccess: false });\n          }, 2000);\n        }\n\n      }\n    }\n  };\n\n  /**\n   * Runs if the user has already registerd but we did not recognize it\n   */\n  function handleHasRegistered() {\n    setIsRegistered(true);\n  }\n\n  function handleSendMessage(event) {\n    const inputMessage = {username : loginInfo.username, message : loginInfo.message};\n\n    if(inputMessage.message.trim().length > 2){\n\n      API.createMessage(inputMessage);\n      setLoginInfo({...loginInfo, message : \"\"});\n    }\n    else{\n      console.log(\"Message was too short.  Did not send\");\n    }\n  }\n\n  function handleVerify(event){\n    event.preventDefault();\n\n    Auth.confirmSignUp(loginInfo.username, loginInfo.verification).then(() => {\n      console.log(loginInfo.verification);\n      console.log(\"Successfully verified\");\n      setIsLoggedIn(true);\n      setNeedsVerify(false);\n\n      AUTHO_UponSuccessfulSignIn(loginInfo.username);\n\n    }).catch( e => {\n      console.log(\"Failed to verify\");\n      console.error(e);\n    })\n  }\n\n  function handleResendVerification(event){\n    event.preventDefault();\n\n    Auth.resendSignUp(loginInfo.username).then(() => {\n      console.log(\"Successfully resent code\");\n    });\n\n  }\n\n  /*-----------------------*/\n  /*--- Check Functions ---*/\n  /*-----------------------*/\n\n  /** Check If Downloaded\n   * This function checks our local storage to see if the item 'hasDownloaded' exists.\n   * Sets our state 'hasDownloaded' to the result of this check.\n   */\n  function checkIfDownloaded() {\n\n    const localHasDownload = localStorage.getItem(\"hasDownloaded\");\t\t//Get, and set a reference to, the item 'hasDownloaded', if it exists.\n\n    //If the item exists, then the player has downloaded the game before.\n    if (localHasDownload) {\n      setHasDownloaded(true);\t\t\t//sets our state 'hasDownloaded' to true\n    }\n    else {\n      //If 'hasDownloaded' is not already set to false, then set it to false.\n      if (hasDownloaded !== false) {\n        setHasDownloaded(false);\t\t//Sets our state 'hasDownloaded' to false.\n      }\n    }\n  }\n\n  /** Check if Registered\n   * Upon start up, checks if the user is logged in by checking the local storage.\n   * @returns true if the user is logged in, false if not.\n   */\n  function checkIfRegistered() {\n\n    const localLogin = localStorage.getItem(\"registered\");\t\t//Get, and set a reference to, item 'registered', if it exists.\n\n    //If we got the item, then...\n    if (localLogin) {\n      setIsRegistered(true);\t\t//Set is registered to true.\n    }\n    else {\n      setIsRegistered(false);\n    }\n  }\n\n  /*-----------------------*/\n  /*------ AWS Autho ------*/\n  /*-----------------------*/\n\n  /**\n   * Uses AWS Amplify to sign in a returning user.\n   * @param {Object} event - The event fired with the action.\n   */\n  function AUTHO_signIn(event) {\n    event.preventDefault();\t\t//Prevent the default action of the event.\n\n    //If we have login info, then...\n    if (loginInfo /* Updated upon user input */) {\n      //If we have a username and password, then...\n      if (loginInfo.username && loginInfo.password) {\n        const username = loginInfo.username;\n        const password = loginInfo.password;\n\n        //Use AWS Amplify to attempt to sign in our user.\n        Auth.signIn(username, password)\n          .then(user => {\t\t//If successful, then...\n            AUTHO_UponSuccessfulSignIn(username);\n          })\n          .catch(err => {\t\t//If unsuccessful, then...\n            console.log(err);\n          });\n      }\n      else {\n        console.warn(\"Missing username or password for login\");\n      }\n    }\n  }\n\n  /**\n   * Uses AWS Amplify to sign up a new user.\n   * @param {Object} event - The event fired with the action.\n   */\n  function AUTHO_signUp(event) {\n  \n\n    if (loginInfo /* Updated upon user input */) {\n      //If we have a username and password, then...\n      if (loginInfo.username && loginInfo.password && loginInfo.email) {\n        const username = loginInfo.username;\n        const password = loginInfo.password;\n        const email = loginInfo.email;\n\n        DB_getUser(username).then((DB_User) => {\n\n          if (!DB_User) {\n\n            //Use AWS Amplify to attempt to sign up the user.\n            Auth.signUp({\n              username,\n              password,\n              attributes: {\n                email\n              }\n            }).then((user) => {\n\n              console.log(\"Signing up user\");\n\n              setNeedsVerify(true);\n\n            })\n              .catch((err) => {\n                console.log(err);\n                console.warn(\"Could not log in\");\n              });\n          }\n          else {\n            alert(\"Username is taken\");\n          }\n        }).catch((err) => {\n          console.log(err);\n        })\n      }\n      else {\n        console.warn(\"We do not have a filled username, password, and/or, email\");\n      }\n    }\n  }\n\n  /**\n   * Runs several functions once the user has signed in\n   * @param {String} username - The name of the user being signed in.\n   */\n  function AUTHO_UponSuccessfulSignIn(username) {\n\n    AUTHO_RegisterUser(username);\t\t//Register the user into the local storage and mongo DB.\n    setIsLoggedIn(true);\t\t\t\t//Set our state 'isLoggedIn' to true.\n  }\n\n  /**\n   * Use AWS Amplify to sign out the user.  Change our state as well.\n   */\n  function AUTHO_signOut() {\n    //Use the 'signOut' method off of AWS Amplify Authentication.\n    Auth.signOut()\n      .then(data => {\t\t//If successful, then...\n        setIsLoggedIn(false);\t\t//Set our 'isLoggedIn' state to false.\n      })\n      //If unsucessful, then log error.\n      .catch(err => console.log(err))\n  }\n\n  /**\n   * Uses AWS Amplify to check if there is a user logged in.  If yes, then register the user to the local storage.\n   */\n  function AUTHO_checkUser() {\n\n    //Use the method off of AWS Amplify Authentication\n    Auth.currentAuthenticatedUser()\n      .then(user => {\n        //User IS logged in.\n\n        AUTHO_SetAccessToken(user.username, {});\n        setLoginInfo({ ...loginInfo, username: user.username });\n\n        //If our state is not already set to true, then...\n        if (isLoggedIn !== true) {\n          setIsLoggedIn(true);\t\t//Set state to true.\n        }\n\n        //If our 'isRegistered' state is not already set to true, then...\n        if (isRegistered !== true) {\n          AUTHO_RegisterUser(user.username);\t\t//Register our user into our local storage.\n        }\n      })\n      .catch(err => {\n        //User is NOT logged in.\n        console.log(err);\n\n        //If our state is not already set to false, then...\n        if (isLoggedIn !== false) {\n          setIsLoggedIn(false);\t\t//Set state to false.\n        }\n\n        //If our 'isRegistered' state is not already set to true, then...\n        if (isRegistered !== true) {\n          checkIfRegistered();\t\t//Check if the user is registered.\n        }\n      })\n  }\n\n  function AUTHO_SetAccessToken(username, event) {\n\n    Auth.currentSession().then((sessionData) => {\n\n      const accessToken = sessionData.getAccessToken().getJwtToken();\n\n      setConnection({ ...connection, \"accessToken\": accessToken });\n\n      DB_updateUser(username, { accessToken });\n\n      DB_registerUser(username);\n\n      if (event.target) {\n        handleCopyAccessToken(event.target, accessToken);\n      }\n\n    }).catch((err) => {\n      console.error(err);\n\n      alert(\"We could not get your user information.  Have you verified your email?\");\n\n      console.error(\"Could not get current session data\");\n    })\n  }\n\n  /**\n   * Sets a reference to the user in local storage and in our Database so we can know the user has registered.\n   * @param {String} username - The username of the current user.\n   */\n  function AUTHO_RegisterUser(username) {\n    localStorage.setItem(\"registered\", username);\t\t//Set an item 'registered' in our local storage so we may check it later.\n    setIsRegistered(true);\t\t//Set our state 'isRegistered' to true.\n\n\n  }\n}\n\nexport default App;\n","// WARNING: DO NOT EDIT. This file is automatically generated by AWS Amplify. It will be overwritten.\n\nconst awsmobile = {\n    \"aws_project_region\": \"us-west-2\",\n    \"aws_cognito_identity_pool_id\": \"us-west-2:86736dd0-37e3-40b1-855c-74b662e25a2b\",\n    \"aws_cognito_region\": \"us-west-2\",\n    \"aws_user_pools_id\": \"us-west-2_NMn2yeWJ4\",\n    \"aws_user_pools_web_client_id\": \"58loi7nseg85g322jcphun0ql9\",\n    \"oauth\": {\n        \"domain\": \"unitynodeauth8acddaf0-8acddaf0-local.auth.us-west-2.amazoncognito.com\",\n        \"scope\": [\n            \"phone\",\n            \"email\",\n            \"openid\",\n            \"profile\",\n            \"aws.cognito.signin.user.admin\"\n        ],\n        \"redirectSignIn\": \"http://localhost:3000/\",\n        \"redirectSignOut\": \"http://localhost:3000/\",\n        \"responseType\": \"code\"\n    },\n    \"federationTarget\": \"COGNITO_USER_POOLS\"\n};\n\n\nexport default awsmobile;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport Amplify from \"aws-amplify\";\nimport config from \"./aws-exports\";\nAmplify.configure(config);\n\n// import * as serviceWorker from './react-serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.register();\n"],"sourceRoot":""}