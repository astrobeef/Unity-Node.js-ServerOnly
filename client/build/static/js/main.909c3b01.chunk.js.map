{"version":3,"sources":["components/pages/Home.js","components/pages/Login.js","components/pages/Play.js","components/pages/Data.js","components/displayPlayers.js","components/pages/About.js","components/NavTabs.js","utils/API.js","App.js","aws-exports.js","index.js"],"names":["Home","props","className","type","onClick","signOut","Login","useEffect","isLoggedIn","to","isRegistered","htmlFor","id","aria-describedby","placeholder","name","onChange","handleInputChange","value","signIn","signUp","handleHasRegistered","Play","buildString","build","hasDownloaded","displaySuccess","setAccessToken","handleDownloadLost","href","handleDownload","target","download","Data","DB_getPlayers","console","log","players","map","player","key","Math","random","username","displayPlayers","About","NavTabs","getPlayers","fetch","then","response","status","error","warn","_id","connection_id","connected","__v","json","data","catch","err","getUser","createUser","userData","method","body","JSON","stringify","headers","updateUser","payload","CURRENT_BUILD","App","useState","setIsLoggedIn","setIsRegistered","setPlayers","loginInfo","setLoginInfo","setHasDownloaded","active","connection","setConnection","event","persist","accessToken","handleCopyAccessToken","AUTHO_SetAccessToken","Auth","currentAuthenticatedUser","user","AUTHO_RegisterUser","localStorage","getItem","exact","path","render","AUTHO_signIn","AUTHO_signUp","handleLoginInputChange","AUTHO_signOut","API","db_players","DB_getUser","Promise","resolve","reject","db_User","length","setItem","removeItem","token","parentNode","atr","dummyTextArea","document","createElement","appendChild","select","execCommand","removeChild","setTimeout","preventDefault","password","AUTHO_UponSuccessfulSignIn","email","DB_User","alert","attributes","currentSession","sessionData","repeat","getAccessToken","getJwtToken","DB_updateUser","DB_registerUser","awsmobile","Amplify","configure","config","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.909c3b01.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Home(props) {\n\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n\n                    <button type=\"button\" className=\"btn btn-primary\" onClick={props.signOut}>\n                        <h2 className = \"m-2\">Sign Out</h2>\n                    </button>\n\n            </header>\n        </div>\n    )\n}\n\nexport default Home;","import React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction Login(props) {\n\n  useEffect(() => {\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <header className={props.isLoggedIn ? \"App-header\" : \"App-header bg-blue\"}>\n\n        {props.isLoggedIn ? <Link to=\"/about\">About</Link> :\n          props.isRegistered ?\n            <div><h1 className=\"header-light\"> Welcome back!</h1>\n              <form>\n                <div className=\"form-group\">\n                  <label htmlFor=\"username\" className=\"header-light\">Username</label>\n                  <input type=\"username\" className=\"form-control\" id=\"username\" aria-describedby=\"usernameHelp\" placeholder=\"Enter username\" name=\"username\" onChange={props.handleInputChange}></input>\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"password\" className=\"header-light\">Password</label>\n                  <input type=\"password\" className=\"form-control\" id=\"password\" placeholder=\"Password\" name=\"password\" onChange={props.handleInputChange}></input>\n                </div>\n                <button type=\"submit\" value=\"Submit\" className=\"btn btn-primary\" onClick={props.signIn}><h2>Sign in</h2></button>\n              </form>\n            </div>\n            :\n            <div><h1> Greetings Newcomer</h1>\n              <form>\n                <div className=\"form-group\">\n                  <label htmlFor=\"email\" className=\"header-light\">Email</label>\n                  <input type=\"email\" className=\"form-control\" id=\"email\" placeholder=\"Email\" name=\"email\" onChange={props.handleInputChange}></input>\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"username\" className=\"header-light\">Username</label>\n                  <input type=\"username\" className=\"form-control\" id=\"username\" aria-describedby=\"usernameHelp\" placeholder=\"Enter username\" name=\"username\" onChange={props.handleInputChange}></input>\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"password\" className=\"header-light\">Password</label>\n                  <input type=\"password\" className=\"form-control\" id=\"password\" placeholder=\"Password\" name=\"password\" onChange={props.handleInputChange}></input>\n                </div>\n              </form>\n              <button type=\"submit\" value=\"Submit\" className=\"my-3 btn btn-primary\" onClick={props.signUp}><h2>Sign up</h2></button>\n\n              <h5 className=\"header-light\"> Already have an accout?</h5>\n\n              <button type=\"submit\" value=\"Submit\" className=\"btn btn-primary\" onClick={props.handleHasRegistered}><h4>Sign in</h4></button>\n            </div>\n\n        }\n\n\n      </header>\n\n    </div>\n\n  )\n}\n\n\nexport default Login;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction Play(props) {\n\n  const buildString = \"/assets/game-builds/\" + props.build + \".zip\";\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header light-yellow\">\n\n        {props.hasDownloaded ?\n          <div><h1>You've downloaded the game!</h1>\n\n            <h4 className=\"my-3\">{props.displaySuccess ? <span className = \"highlight\">Copied to clipboard!</span> : <span>Get your access token here</span>\n            }</h4>\n\n              <button id = \"data-token\" type=\"button\" className=\"btn btn-primary\" onClick={props.setAccessToken}>\n                <h2 className=\"m-2\">Access Token</h2>\n              </button>\n\n              <h5 className=\"mt-5\">If you can't find the download in your downloads folder, press the button below</h5>\n\n              <button onClick={props.handleDownloadLost} type=\"button\" className=\"btn btn-warning my-3\">\n                Lost Download\n              </button>\n          </div>\n            :\n          <div><h1>Download Instructions</h1>\n              <h5>If you don't have software to open ZIP files, follow the WinRAR link below.</h5>\n              <h5>Once you've downloaded the ZIP file, open the file and run the 'launch.exe' file to play.</h5>\n\n              <h4 className=\"mt-4\">WinRAR 'trial' download</h4>\n              <a className=\"winRAR\" href=\"https://www.rarlab.com/rar/winrar-x64-580.exe\"> Windows </a>\n              <a className=\"winRAR\" href=\"https://www.rarlab.com/rar/rarosx-5.8.0.tar.gz\"> Mac </a>\n\n              <h4 className=\"mt-3 mb-2\">Download my Game!</h4>\n              <button id = \"download-btn\" htmlFor=\"download-link\" type=\"button\" className=\"btn btn-primary mt-3\" onClick = {props.setAccessToken}>\n                <Link id=\"download-link\" onClick={props.handleDownload} to={buildString} target=\"_blank\" download ><h3>Download</h3></Link>\n              </button>\n            </div>\n\n            }\n    \n      </header>\n\n    </div>\n      )\n    }\n    \nexport default Play;","import React, {useEffect} from \"react\";\n\n//Components\nimport displayPlayers from \"../displayPlayers\";\n\nfunction Data(props) {\n\n  useEffect(() => {\n    props.DB_getPlayers();\n    console.log(\"Using data effect\"); \n  }, []);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header light-yellow\">\n\n        <h1>Data</h1>\n        <h3>Connected Players</h3>\n\n        {props.players ? displayPlayers(props) : <p>No players connected</p>}\n\n      </header>\n\n    </div>\n  )\n}\n\nexport default Data;","import React from \"react\";\n\n/**\n * Displays our users state in an HTML div.\n * @param {Object} props - Props MUST contain a 'players' array to be used in this component.\n * @returns HTML rendered component.\n */\nexport default function displayPlayers(props) {\n\n    const {players} = props;        //Pull players off of props.\n\n    //Return the contents to be rendered.\n    return (\n        <div>\n            {/* Map over each 'player' in the array 'players' */}\n            {players.map((player) => {\n                player.key = Math.random();\t\t//Give the player a random key value.\n                //Return a <DIV> for each 'player' within 'players'\n                return (\n                    <div>\n                        {player.username === \"Default_Player\" ? null : <h3>{player.username}</h3>}\n                    </div>\n                )\n            })}\n        </div>)\n}","import React from \"react\";\n\nfunction About(props) {\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header light-yellow\">\n\n        <h1>About Me</h1>\n        <h3>I'm Brian Graf</h3>\n\n      </header>\n\n\n    </div>\n  )\n}\n\nexport default About;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction NavTabs(props) {\n\n    console.log(props);\n\n    if (!props.isLoggedIn) {\n        return null;\n    }\n\n    return (\n        <ul className=\"nav justify-content-center pt-2\">\n            {/* <li className=\"nav-item\">\n                <Link to=\"/home\" className=\"nav-link\">\n                    <h3>Home</h3>\n        </Link>\n            </li> */}\n            {props.isLoggedIn ? null :\n                <li className=\"nav-item\">\n                    <Link to=\"/login\" className=\"nav-link\">\n                        <h3>Login/Register</h3>\n                    </Link>\n                </li>\n            }\n            <li className=\"nav-item\">\n                <Link to=\"/play\" className=\"nav-link\">\n                    <h3>Download</h3>\n                </Link>\n            </li>\n            <li className=\"nav-item\">\n                <Link to=\"/data\" className=\"nav-link\">\n                    <h3>Data</h3>\n                </Link>\n            </li>\n            <li className=\"nav-item\">\n                <Link to=\"/about\" className=\"nav-link\">\n                    <h3>About</h3>\n                </Link>\n            </li>\n            <li className=\"nav-item\">\n                <Link to=\"/home\" className=\"nav-link\">\n                    <h3>Sign Out</h3>\n                </Link>\n            </li>\n        </ul>\n\n    );\n}\n\nexport default NavTabs;\n","export default {\r\n    getPlayers: function () {\r\n\r\n        return fetch(\"api/players\")\r\n            .then(function (response) {\r\n                if (response.status !== 200) {\r\n                    console.error(`problem found with status code : ${response.status}`);\r\n                    console.warn(`Returning dummy response`);\r\n\r\n                    const dummyData = [\r\n                        {\r\n                            _id: \"12345abc_dummy\",\r\n                            connection_id: \"D5e315_dummy\",\r\n                            username: \"Dummy Player\",\r\n                            connected: true,\r\n                            __v: 0,\r\n                            key: 0.333334\r\n                        }\r\n                    ]\r\n\r\n                    return dummyData;\r\n                }\r\n\r\n                return response.json().then(function (data) {\r\n                    return data;\r\n                })\r\n            })\r\n            .catch(function (err) {\r\n                console.log(`fetch error : ${err}`);\r\n            })\r\n\r\n    },\r\n\r\n    getUser: function (username) {\r\n        return fetch(`/api/users/${username}`)\r\n            .then(function (response) {\r\n                if (response.status !== 200) {\r\n                    console.error(`problem found with status code : ${response.status}`);\r\n                }\r\n\r\n                return response.json().then(function (data) {\r\n                    return data;\r\n                })\r\n            })\r\n            .catch(function (err) {\r\n                console.log(`fetch error : ${err}`);\r\n            })\r\n    },\r\n\r\n    createUser: function (userData) {\r\n\r\n        return fetch(\r\n            \"api/users/create\", {\r\n            method: \"POST\",\r\n            body: JSON.stringify(userData),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        }\r\n        )\r\n            .then(function (response) {\r\n                if (response.status !== 200) {\r\n\r\n                    return response.status;\r\n                }\r\n\r\n                return response.json().then(function (data) {\r\n                    return data;\r\n                })\r\n            })\r\n            .catch(function (err) {\r\n                console.log(`fetch error : ${err}`);\r\n            })\r\n    },\r\n\r\n    updateUser: function (username, payload) {\r\n        return fetch(\r\n            `/api/users/${username}`, {\r\n            method: \"PUT\",\r\n            body: JSON.stringify({...payload, username}),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        })\r\n            .then(function (response) {\r\n                if (response.status !== 200) {\r\n\r\n                    return response.status;\r\n                }\r\n\r\n                return response.json().then(function (data) {\r\n                    return data;\r\n                })\r\n            })\r\n            .catch(function (err) {\r\n                console.log(`fetch error : ${err}`);\r\n            })\r\n    }\r\n}","/** ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n * App.js - This script establishes our React client, setting up the routes for our web page.  It also houses many methods which are intergral to our application : handler methods, check methods, and authentication methods (using AWS Amplify).\n * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/\n\n/*-------------------*/\n/*----NPM Imports----*/\n/*-------------------*/\n\nimport React, { useState, useEffect } from 'react';         //React Import\nimport { BrowserRouter as Router, Route, Redirect } from \"react-router-dom\";\nimport { Auth } from \"aws-amplify\";\t\t\t\t\t\t\t//AWS Amplify Authentication import\nimport socketIOClient from \"socket.io-client\";\n\n/*-------------------*/\n/*---Local Imports---*/\n/*-------------------*/\n\nimport './App.css';\n\n//Pages\nimport Home from \"./components/pages/Home\";\nimport Login from \"./components/pages/Login\";\nimport Play from \"./components/pages/Play\";\nimport Data from \"./components/pages/Data\";\nimport About from \"./components/pages/About\";\n\n//Components\nimport NavTabs from './components/NavTabs';\n\n//Utils\nimport API from \"./utils/API\";\n\n\n/*-------------------*/\n/*--Local Variables--*/\n/*-------------------*/\n\nconst CURRENT_BUILD = \"Buildv1.3-Heroku\";\t\t//The name of our current game build, found in /public/assets/game-builds/\n\n/*-------------------*/\n/*------- App -------*/\n/*-------------------*/\n\nfunction App() {\n\n  //---State\n\n  const [isLoggedIn, setIsLoggedIn] = useState([]);\t\t\t\t//A boolean value whether the user is logged in or not.\n  const [isRegistered, setIsRegistered] = useState(false);      \t//A boolean value whether the user has registered or not.\n\n  const [players, setPlayers] = useState([]);\t\t\t\t\t\t//The players connected to the server\n\n  const [loginInfo, setLoginInfo] = useState({ name: \"login\" });\t//The user's login information: username, password.\n\n  const [hasDownloaded, setHasDownloaded] = useState(false);\t\t//A boolean value whether the user has downloaded the game or not.\n\n  const [connection, setConnection] = useState({ active: false });\n\n  //---Use Effect\n  //-------Runs when state changes.\n  useEffect(() => {\n    console.log(\"Using effect\");\n    AUTHO_checkUser();\n    checkIfDownloaded();\n\n    // if (!connection.active) {\n    //   setConnection({ ...connection, active: true });\n\n    //   setInterval(() => {\n    //     DB_getPlayers();\n    //     console.log(connection);\n    //   }, 10000);\n    // }\n\n  }, []);\n\n  function setAccessToken(event) {\n\n    event.persist();\n\n    if (!connection.accessToken) {\n\n      AUTHO_SetAccessToken(loginInfo.username, event);\n    }\n    else {\n      console.log(\"Now that's efficency!\");\n      handleCopyAccessToken(event.target, connection.accessToken);\n    }\n  }\n\n  //Return the render content for the web page.\n  return (\n    <div>\n      <Router>\n\n        <NavTabs isLoggedIn={isLoggedIn ? true : false} />\n        <Route exact path=\"/login\" render={(props) => <Login {...props} isRegistered={isRegistered ? true : false} signIn={AUTHO_signIn} signUp={AUTHO_signUp} handleInputChange={handleLoginInputChange} isLoggedIn={isLoggedIn} handleHasRegistered={handleHasRegistered} />} />\n        <Route exact path=\"/home\" render={(props) => <Home {...props} signOut={AUTHO_signOut} />} />\n        <Route exact path=\"/play\" render={(props) => <Play {...props} handleDownload={handleDownload} handleDownloadLost={handleDownloadLost} hasDownloaded={hasDownloaded} build={CURRENT_BUILD} setAccessToken={setAccessToken} displaySuccess={connection.displaySuccess} />} />\n        <Route exact path=\"/data\" render={(props) => <Data {...props} players={players} DB_getPlayers={DB_getPlayers} />} />\n        <Route exact path=\"/about\" render={(props) => <About {...props} />} />\n\n        <Route path=\"/*\" render={(props) => { if (!isLoggedIn) return (<Redirect to=\"/login\"></Redirect>) }} />\n      </Router>\n    </div>\n\n  );\n\n  /*------------------------*/\n  /*-- Database Functions --*/\n  /*------------------------*/\n\n\t/**\n\t * Returns the players from our Mongo Database.\n\t */\n  function DB_getPlayers() {\n    API.getPlayers()\t//Call the getPlayers() method off of our API object, which was imported from Utils.\n      .then((db_players) => {\t\t//Then, with the retrieved data, ...\n        console.log(db_players);\n        setPlayers(db_players);\t\t//Set our players state to the retrieved data.\n      }\n      )\n      .catch((err) => {\n        console.error(err);\n      });\n  };\n\n  /**\n   * Registers the user into our Mongo Database.\n   * @param {string} username - The user to be added to the database.\n   */\n  function DB_registerUser(username) {\n\n    /*Check if the user is already registered*/ const DB_isRegistered = false; // For now, we assume no.\n\n    const payload = { username };\n\n    //CHECK IF USER IS REGISTERED\n\n    DB_getUser(username).then((DB_User) => {\n\n      if (!DB_User) {\n\n        console.log(`\"Registering user, ${username}, to Mongo DB...\"`);\n        //If we did not find the user, then create a reference.\n        API.createUser(payload)\n          .then((db_User) => {\n            console.log(db_User);\n            console.log(\"successfully created a user in our MongoDB!\");\n          })\n          .catch((err) => {\n            console.error(err);\n          });\n      }\n      else {\n        console.log(`\"User, ${username} is already registered\"`);\n        //Do nothing; user is already registered in MongoDB.\n      }\n\n    }).catch((err) => {\n\n      console.log(err);\n    });\n\n  };\n\n  /**\n   * Updates the access token of the user.\n   * @param {String} username - The user to be updated in the MongoDB.\n   * @param {Object} payload - The information to be changed.  Must match keys in the User Model.\n   */\n  function DB_updateUser(username, payload) {\n\n    API.updateUser(username, payload)\n      .then((db_User) => {\n        console.log(db_User);\n        console.log(\"Updated user data\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n\n  }\n\n  /**\n   * Finds the user.  Returns true if the user is found, false if not.\n   * @param {string} username - The user to be found in the MongoDB.\n   */\n  function DB_getUser(username) {\n\n    return new Promise(function (resolve, reject) {\n\n      API.getUser(username)\n        .then((db_User) => {\n\n          if (db_User.length > 0) {\n            console.log(db_User);\n            console.log(\"Found reference to user in MongoDB\");\n            resolve(JSON.stringify(db_User));\n          }\n          else {\n            resolve(null);\n          }\n\n        }).catch((err) => {\n          console.error(err);\n          reject(err);\n        });\n    })\n  }\n\n  /*-----------------------*/\n  /*-- Handler Functions --*/\n  /*-----------------------*/\n\n  /** Handle Login Input Change\n   * Updates the state of the login based on the input name and value\n   * @param {Object} event - If an object, the change event fired when the input value is changed.\n   * @param {String} event - If a string, the value to be set to the email.\n   */\n  function handleLoginInputChange(event) {\n\n    const { target } = event;\t\t//Pull the target off of our event.\n    const value = target.value;\t\t//Set a reference for our target's value (the user's input).\n    const { name } = target;\t\t//Pull the name off of our target (the element to be changed by the input).\n\n    console.log(`value : ${value}`);\n    console.log(`name : ${name}`);\n\n    setLoginInfo({ ...loginInfo, [name]: value });\t\t//Set the key of 'name' to the value of 'value', so the user's input alters their login info.\n  }\n\n  /** Handle Download\n   * This does not download the game, but instead sets a reference within the local storage that we have downloaded the game.\n   * @param {Object} event - The fired event from the action.\n   */\n  function handleDownload(event) {\n\n    localStorage.setItem(\"hasDownloaded\", true);\t\t//Set an item in localStorage so we can reference it later to check if the user has downloaded the game.\n\n    //If 'hasDownloaded' is not already true, then set it to true.\n    if (hasDownloaded !== true) {\n      setHasDownloaded(true);\t\t//Alter the state of 'hasDownloaded' to true\n    }\n  }\n\n  /** Handle Download Lost\n   * This is fired if the user needs to download the game again.  The local storage 'hasDownloaded' item is removed.\n   * @param {Object} event - The fired event from the action.\n   */\n  function handleDownloadLost(event) {\n\n    localStorage.removeItem(\"hasDownloaded\");\t\t//Remove the item 'hasDownloaded' so we can reference it later to check that the user has NOT downloaded the game.\n\n    //If 'hasDownloaded' is not already false, then set it to false.\n    if (hasDownloaded !== false) {\n      setHasDownloaded(false);\t\t//Alter the state of 'hasDownloaded to false.\n    }\n  }\n\n  function handleCopyAccessToken(target, token) {\n    if (target) {\n      if (target.id !== \"data-token\" && target.id !== \"download-btn\") {\n        console.log(\"We did not click on the button\");\n\n        handleCopyAccessToken(target.parentNode, token);\n      }\n      else {\n        const atr = token;\n\n        const dummyTextArea = document.createElement(\"textarea\");\n\n        dummyTextArea.value = atr;\n        document.body.appendChild(dummyTextArea);\n        dummyTextArea.select();\n\n        document.execCommand('copy');\n        document.body.removeChild(dummyTextArea);\n\n        console.log(\"Copied to clipboard!\");\n\n        if (!connection.displaySuccess) {\n          setConnection({ ...connection, \"accessToken\": atr, displaySuccess: true });\n\n          setTimeout(() => {\n            setConnection({ ...connection, \"accessToken\": atr, displaySuccess: false });\n          }, 2000);\n        }\n\n      }\n    }\n  };\n\n  /**\n   * Runs if the user has already registerd but we did not recognize it\n   */\n  function handleHasRegistered() {\n    setIsRegistered(true);\n  }\n\n  /*-----------------------*/\n  /*--- Check Functions ---*/\n  /*-----------------------*/\n\n  /** Check If Downloaded\n   * This function checks our local storage to see if the item 'hasDownloaded' exists.\n   * Sets our state 'hasDownloaded' to the result of this check.\n   */\n  function checkIfDownloaded() {\n\n    const localHasDownload = localStorage.getItem(\"hasDownloaded\");\t\t//Get, and set a reference to, the item 'hasDownloaded', if it exists.\n\n    //If the item exists, then the player has downloaded the game before.\n    if (localHasDownload) {\n      setHasDownloaded(true);\t\t\t//sets our state 'hasDownloaded' to true\n    }\n    else {\n      //If 'hasDownloaded' is not already set to false, then set it to false.\n      if (hasDownloaded !== false) {\n        setHasDownloaded(false);\t\t//Sets our state 'hasDownloaded' to false.\n      }\n    }\n  }\n\n  /** Check if Registered\n   * Upon start up, checks if the user is logged in by checking the local storage.\n   * @returns true if the user is logged in, false if not.\n   */\n  function checkIfRegistered() {\n\n    const localLogin = localStorage.getItem(\"registered\");\t\t//Get, and set a reference to, item 'registered', if it exists.\n\n    //If we got the item, then...\n    if (localLogin) {\n      setIsRegistered(true);\t\t//Set is registered to true.\n    }\n    else {\n      setIsRegistered(false);\n    }\n  }\n\n  /*-----------------------*/\n  /*------ AWS Autho ------*/\n  /*-----------------------*/\n\n  /**\n   * Uses AWS Amplify to sign in a returning user.\n   * @param {Object} event - The event fired with the action.\n   */\n  function AUTHO_signIn(event) {\n    event.preventDefault();\t\t//Prevent the default action of the event.\n\n    //If we have login info, then...\n    if (loginInfo /* Updated upon user input */) {\n      //If we have a username and password, then...\n      if (loginInfo.username && loginInfo.password) {\n        const username = loginInfo.username;\n        const password = loginInfo.password;\n\n        //Use AWS Amplify to attempt to sign in our user.\n        Auth.signIn(username, password)\n          .then(user => {\t\t//If successful, then...\n            AUTHO_UponSuccessfulSignIn(username);\n          })\n          .catch(err => {\t\t//If unsuccessful, then...\n            console.log(err);\n          });\n      }\n      else {\n        console.warn(\"Missing username or password for login\");\n      }\n    }\n  }\n\n  /**\n   * Uses AWS Amplify to sign up a new user.\n   * @param {Object} event - The event fired with the action.\n   */\n  function AUTHO_signUp(event) {\n\n    if (loginInfo /* Updated upon user input */) {\n      //If we have a username and password, then...\n      if (loginInfo.username && loginInfo.password && loginInfo.email) {\n        const username = loginInfo.username;\n        const password = loginInfo.password;\n        const email = loginInfo.email;\n\n        DB_getUser(username).then((DB_User) => {\n\n          if (!DB_User) {\n            //Use AWS Amplify to attempt to sign up the user.\n            Auth.signUp({\n              username,\n              password,\n              attributes: {\n                email\n              }\n            }).then((user) => {\n              AUTHO_UponSuccessfulSignIn(username);\n            })\n              .catch((err) => {\n                console.log(err);\n                console.warn(\"Could not log in\");\n              });\n          }\n          else {\n            alert(\"Username is taken\");\n          }\n        }).catch((err) => {\n          console.log(err);\n        })\n      }\n      else {\n        console.warn(\"We do not have a filled username, password, and/or, email\");\n      }\n    }\n  }\n\n  /**\n   * Runs several functions once the user has signed in\n   * @param {String} username - The name of the user being signed in.\n   */\n  function AUTHO_UponSuccessfulSignIn(username) {\n\n    AUTHO_RegisterUser(username);\t\t//Register the user into the local storage and mongo DB.\n    setIsLoggedIn(true);\t\t\t\t//Set our state 'isLoggedIn' to true.\n  }\n\n  /**\n   * Use AWS Amplify to sign out the user.  Change our state as well.\n   */\n  function AUTHO_signOut() {\n    //Use the 'signOut' method off of AWS Amplify Authentication.\n    Auth.signOut()\n      .then(data => {\t\t//If successful, then...\n        setIsLoggedIn(false);\t\t//Set our 'isLoggedIn' state to false.\n      })\n      //If unsucessful, then log error.\n      .catch(err => console.log(err))\n  }\n\n  /**\n   * Uses AWS Amplify to check if there is a user logged in.  If yes, then register the user to the local storage.\n   */\n  function AUTHO_checkUser() {\n\n    //Use the method off of AWS Amplify Authentication\n    Auth.currentAuthenticatedUser()\n      .then(user => {\n        //User IS logged in.\n\n        AUTHO_SetAccessToken(user.username, {});\n        setLoginInfo({ ...loginInfo, username: user.username });\n\n        //If our state is not already set to true, then...\n        if (isLoggedIn !== true) {\n          setIsLoggedIn(true);\t\t//Set state to true.\n        }\n\n        //If our 'isRegistered' state is not already set to true, then...\n        if (isRegistered !== true) {\n          AUTHO_RegisterUser(user.username);\t\t//Register our user into our local storage.\n        }\n      })\n      .catch(err => {\n        //User is NOT logged in.\n        console.log(err);\n\n        //If our state is not already set to false, then...\n        if (isLoggedIn !== false) {\n          setIsLoggedIn(false);\t\t//Set state to false.\n        }\n\n        //If our 'isRegistered' state is not already set to true, then...\n        if (isRegistered !== true) {\n          checkIfRegistered();\t\t//Check if the user is registered.\n        }\n      })\n  }\n\n  function AUTHO_SetAccessToken(username, event) {\n\n    Auth.currentSession().then((sessionData) => {\n\n\n      console.log(\"setting access token\");\n      console.log(\"^\".repeat(60));\n\n      const accessToken = sessionData.getAccessToken().getJwtToken();\n\n      setConnection({ ...connection, \"accessToken\": accessToken });\n\n      DB_updateUser(username, {accessToken});\n\n      DB_registerUser(username);\n\n      if (event.target) {\n        handleCopyAccessToken(event.target, accessToken);\n      }\n\n    }).catch((err) => {\n      console.error(err);\n\n      console.error(\"Could not get current session data\");\n    })\n  }\n\n  /**\n   * Sets a reference to the user in local storage and in our Database so we can know the user has registered.\n   * @param {String} username - The username of the current user.\n   */\n  function AUTHO_RegisterUser(username) {\n    localStorage.setItem(\"registered\", username);\t\t//Set an item 'registered' in our local storage so we may check it later.\n    setIsRegistered(true);\t\t//Set our state 'isRegistered' to true.\n\n\n  }\n}\n\nexport default App;\n","// WARNING: DO NOT EDIT. This file is automatically generated by AWS Amplify. It will be overwritten.\n\nconst awsmobile = {\n    \"aws_project_region\": \"us-west-2\",\n    \"aws_cognito_identity_pool_id\": \"us-west-2:86736dd0-37e3-40b1-855c-74b662e25a2b\",\n    \"aws_cognito_region\": \"us-west-2\",\n    \"aws_user_pools_id\": \"us-west-2_NMn2yeWJ4\",\n    \"aws_user_pools_web_client_id\": \"58loi7nseg85g322jcphun0ql9\",\n    \"oauth\": {\n        \"domain\": \"unitynodeauth8acddaf0-8acddaf0-local.auth.us-west-2.amazoncognito.com\",\n        \"scope\": [\n            \"phone\",\n            \"email\",\n            \"openid\",\n            \"profile\",\n            \"aws.cognito.signin.user.admin\"\n        ],\n        \"redirectSignIn\": \"http://localhost:3000/\",\n        \"redirectSignOut\": \"http://localhost:3000/\",\n        \"responseType\": \"code\"\n    },\n    \"federationTarget\": \"COGNITO_USER_POOLS\"\n};\n\n\nexport default awsmobile;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport Amplify from \"aws-amplify\";\nimport config from \"./aws-exports\";\nAmplify.configure(config);\n\n// import * as serviceWorker from './react-serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.register();\n"],"sourceRoot":""}