{"version":3,"sources":["components/pages/Home.js","components/pages/Login.js","components/pages/Play.js","components/pages/Data.js","components/displayPlayers.js","components/pages/About.js","components/NavTabs.js","utils/API.js","App.js","aws-exports.js","index.js"],"names":["Home","props","className","type","onClick","signOut","Login","useEffect","isLoggedIn","to","isRegistered","htmlFor","id","aria-describedby","placeholder","name","onChange","handleInputChange","value","signIn","Play","buildString","build","hasDownloaded","accessToken","setAccessToken","data-token","handleDownloadLost","href","handleDownload","target","download","Data","DB_getPlayers","console","log","players","map","player","key","Math","random","username","displayPlayers","About","NavTabs","getPlayers","fetch","then","response","status","error","warn","_id","connection_id","connected","__v","json","data","catch","err","CURRENT_BUILD","App","useState","setIsLoggedIn","setIsRegistered","setPlayers","loginInfo","setLoginInfo","setHasDownloaded","active","connection","setConnection","event","persist","Auth","currentSession","sessionData","getAccessToken","getJwtToken","handleCopyAccessToken","parentNode","atr","getAttribute","dummyTextArea","document","createElement","body","appendChild","select","execCommand","removeChild","setTimeout","currentAuthenticatedUser","user","AUTHO_RegisterUser","localStorage","getItem","repeat","setInterval","exact","path","render","AUTHO_signIn","handleLoginInputChange","AUTHO_signOut","API","db_players","setItem","removeItem","preventDefault","password","signUp","attributes","email","validationData","awsmobile","Amplify","configure","config","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.499188c4.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Home(props) {\n\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n\n                    <button type=\"button\" className=\"btn btn-primary\" onClick={props.signOut}>\n                        <h2 className = \"m-2\">Sign Out</h2>\n                    </button>\n\n            </header>\n        </div>\n    )\n}\n\nexport default Home;","import React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction Login(props) {\n\n  useEffect(() => {\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n\n        {props.isLoggedIn ? <Link to=\"/about\">About</Link> :\n          props.isRegistered ?\n            <div><h1 className = \"header-light\"> Welcome back!</h1>\n              <form>\n                <div className=\"form-group\">\n                  <label htmlFor=\"username\" className = \"header-light\">Username</label>\n                  <input type=\"username\" className=\"form-control\" id=\"username\" aria-describedby=\"usernameHelp\" placeholder=\"Enter username\" name=\"username\" onChange={props.handleInputChange}></input>\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"password\" className = \"header-light\">Password</label>\n                  <input type=\"password\" className=\"form-control\" id=\"password\" placeholder=\"Password\" name=\"password\" onChange={props.handleInputChange}></input>\n                </div>\n                <button type=\"submit\" value=\"Submit\" className=\"btn btn-primary\" onClick={props.signIn}><h2>Sign in</h2></button>\n              </form>\n            </div>\n            :\n            <div><h1> Greetings Newcomer</h1>\n              Refresh the page once you've signed up.  This is a bug I haven't fixed yet.<br></br>\n              <button type=\"submit\" value=\"Submit\" className=\"my-3 btn btn-primary\" onClick={props.signIn}>Sign up</button>\n            </div>\n\n        }\n\n\n      </header>\n\n    </div>\n\n  )\n}\n\n\nexport default Login;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction Play(props) {\n\n  const buildString = \"/assets/game-builds/\" + props.build + \".zip\";\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header light-yellow\">\n\n        {props.hasDownloaded ?\n          <div><h1>You've downloaded the game!</h1>\n\n            <h4 className=\"my-3\">{props.accessToken ? <span className = \"highlight\">Copied to clipboard!</span> : <span>Get your access token here</span>\n            }</h4>\n\n              <button id = \"data-token\" type=\"button\" className=\"btn btn-primary\" onClick={props.setAccessToken} data-token= {props.accessToken}>\n                <h2 className=\"m-2\">Access Token</h2>\n              </button>\n\n              <h5 className=\"mt-5\">If you can't find the download in your downloads folder, press the button below</h5>\n\n              <button onClick={props.handleDownloadLost} type=\"button\" className=\"btn btn-warning my-3\">\n                Lost Download\n              </button>\n          </div>\n            :\n          <div><h1>Download Instructions</h1>\n              <h5>If you don't have software to open ZIP files, follow the WinRAR link below.</h5>\n              <h5>Once you've downloaded the ZIP file, open the file and run the 'launch.exe' file to play.</h5>\n\n              <h4 className=\"mt-4\">WinRAR 'trial' download</h4>\n              <a className=\"winRAR\" href=\"https://www.rarlab.com/rar/winrar-x64-580.exe\"> Windows </a>\n              <a className=\"winRAR\" href=\"https://www.rarlab.com/rar/rarosx-5.8.0.tar.gz\"> Mac </a>\n\n              <h4 className=\"mt-3 mb-2\">Download my Game!</h4>\n              <button htmlFor=\"download-link\" type=\"button\" className=\"btn btn-primary mt-3\">\n                <Link id=\"download-link\" onClick={props.handleDownload} to={buildString} target=\"_blank\" download ><h3>Download</h3></Link>\n              </button>\n            </div>\n\n            }\n    \n      </header>\n\n    </div>\n      )\n    }\n    \nexport default Play;","import React, {useEffect} from \"react\";\n\n//Components\nimport displayPlayers from \"../displayPlayers\";\n\nfunction Data(props) {\n\n  useEffect(() => {\n    props.DB_getPlayers();\n    console.log(\"Using data effect\"); \n  }, []);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header light-yellow\">\n\n        <h1>Data</h1>\n        <h3>Connected Players</h3>\n\n        {props.players ? displayPlayers(props) : <p>No players connected</p>}\n\n      </header>\n\n    </div>\n  )\n}\n\nexport default Data;","import React from \"react\";\n\n/**\n * Displays our users state in an HTML div.\n * @param {Object} props - Props MUST contain a 'players' array to be used in this component.\n * @returns HTML rendered component.\n */\nexport default function displayPlayers(props) {\n\n    const {players} = props;        //Pull players off of props.\n\n    //Return the contents to be rendered.\n    return (\n        <div>\n            {/* Map over each 'player' in the array 'players' */}\n            {players.map((player) => {\n                player.key = Math.random();\t\t//Give the player a random key value.\n                //Return a <DIV> for each 'player' within 'players'\n                return (\n                    <div>\n                        {player.username === \"Default_Player\" ? null : <h3>{player.username}</h3>}\n                    </div>\n                )\n            })}\n        </div>)\n}","import React from \"react\";\n\nfunction About(props) {\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header light-yellow\">\n\n        <h1>About Me</h1>\n        <h3>I'm Brian Graf</h3>\n\n      </header>\n\n\n    </div>\n  )\n}\n\nexport default About;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction NavTabs(props) {\n\n    console.log(props);\n\n    if (!props.isLoggedIn) {\n        return null;\n    }\n\n    return (\n        <ul className=\"nav justify-content-center pt-2\">\n            {/* <li className=\"nav-item\">\n                <Link to=\"/home\" className=\"nav-link\">\n                    <h3>Home</h3>\n        </Link>\n            </li> */}\n            {props.isLoggedIn ? null :\n                <li className=\"nav-item\">\n                    <Link to=\"/login\" className=\"nav-link\">\n                        <h3>Login/Register</h3>\n                    </Link>\n                </li>\n            }\n            <li className=\"nav-item\">\n                <Link to=\"/play\" className=\"nav-link\">\n                    <h3>Download</h3>\n                </Link>\n            </li>\n            <li className=\"nav-item\">\n                <Link to=\"/data\" className=\"nav-link\">\n                    <h3>Data</h3>\n                </Link>\n            </li>\n            <li className=\"nav-item\">\n                <Link to=\"/about\" className=\"nav-link\">\n                    <h3>About</h3>\n                </Link>\n            </li>\n            <li className=\"nav-item\">\n                <Link to=\"/home\" className=\"nav-link\">\n                    <h3>Sign Out</h3>\n                </Link>\n            </li>\n        </ul>\n\n    );\n}\n\nexport default NavTabs;\n","export default{\r\n    getPlayers: function(){\r\n\r\n        return fetch(\"api/players\")\r\n        .then(function(response){\r\n            if(response.status !== 200){\r\n                console.error(`problem found with status code : ${response.status}`);\r\n                console.warn(`Returning dummy response`);\r\n\r\n                const dummyData = [\r\n                    {\r\n                        _id : \"12345abc_dummy\",\r\n                        connection_id: \"D5e315_dummy\",\r\n                        username : \"Dummy Player\",\r\n                        connected : true,\r\n                        __v : 0,\r\n                        key : 0.333334\r\n                    }\r\n                ]\r\n\r\n                return dummyData;\r\n            }\r\n\r\n            return response.json().then(function(data){\r\n                return data;\r\n            })\r\n        })\r\n        .catch(function(err){\r\n            console.log(`fetch error : ${err}`);\r\n        })\r\n\r\n    }\r\n}","/** ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n * App.js - This script establishes our React client, setting up the routes for our web page.  It also houses many methods which are intergral to our application : handler methods, check methods, and authentication methods (using AWS Amplify).\n * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/\n\n/*-------------------*/\n/*----NPM Imports----*/\n/*-------------------*/\n\nimport React, { useState, useEffect } from 'react';         //React Import\nimport { BrowserRouter as Router, Route, Redirect } from \"react-router-dom\";\nimport { Auth } from \"aws-amplify\";\t\t\t\t\t\t\t//AWS Amplify Authentication import\nimport socketIOClient from \"socket.io-client\";\n\n/*-------------------*/\n/*---Local Imports---*/\n/*-------------------*/\n\nimport './App.css';\n\n//Pages\nimport Home from \"./components/pages/Home\";\nimport Login from \"./components/pages/Login\";\nimport Play from \"./components/pages/Play\";\nimport Data from \"./components/pages/Data\";\nimport About from \"./components/pages/About\";\n\n//Components\nimport NavTabs from './components/NavTabs';\n\n//Utils\nimport API from \"./utils/API\";\n\n\n/*-------------------*/\n/*--Local Variables--*/\n/*-------------------*/\n\nconst CURRENT_BUILD = \"Buildv1.3-Heroku\";\t\t//The name of our current game build, found in /public/assets/game-builds/\n\n/*-------------------*/\n/*------- App -------*/\n/*-------------------*/\n\nfunction App() {\n\n  //---State\n\n  const [isLoggedIn, setIsLoggedIn] = useState([]);\t\t\t\t//A boolean value whether the user is logged in or not.\n  const [isRegistered, setIsRegistered] = useState(false);      \t//A boolean value whether the user has registered or not.\n\n  const [players, setPlayers] = useState([]);\t\t\t\t\t\t//The players connected to the server\n\n  const [loginInfo, setLoginInfo] = useState({ name: \"login\" });\t//The user's login information: username, password.\n\n  const [hasDownloaded, setHasDownloaded] = useState(false);\t\t//A boolean value whether the user has downloaded the game or not.\n\n  const [connection, setConnection] = useState({ active: false });\n\n  //---Use Effect\n  //-------Runs when state changes.\n  useEffect(() => {\n    console.log(\"Using effect\");\n    AUTHO_checkUser();\n    checkIfDownloaded();\n\n    if (!connection.active) {\n      setConnection({ active: true });\n\n      setInterval(() => {\n        DB_getPlayers();\n        console.log(connection);\n      }, 10000);\n    }\n\n  }, []);\n\n  function setAccessToken(event) {\n\n    event.persist();\n\n    Auth.currentSession().then((sessionData) => {\n\n      const accessToken = sessionData.getAccessToken().getJwtToken();\n\n      setConnection({ accessToken });\n\n      handleCopyAccessToken(event.target);\n    });\n  }\n\n  //Return the render content for the web page.\n  return (\n    <div>\n      <Router>\n\n        <NavTabs isLoggedIn={isLoggedIn ? true : false} />\n        <Route exact path=\"/login\" render={(props) => <Login {...props} isRegistered={isRegistered ? true : false} signIn={AUTHO_signIn} handleInputChange={handleLoginInputChange} isLoggedIn={isLoggedIn} />} />\n        <Route exact path=\"/home\" render={(props) => <Home {...props} signOut={AUTHO_signOut} />} />\n        <Route exact path=\"/play\" render={(props) => <Play {...props} handleDownload={handleDownload} handleDownloadLost={handleDownloadLost} hasDownloaded={hasDownloaded} build={CURRENT_BUILD} setAccessToken={setAccessToken} accessToken={connection.accessToken} />} />\n        <Route exact path=\"/data\" render={(props) => <Data {...props} players={players} DB_getPlayers={DB_getPlayers} />} />\n        <Route exact path=\"/about\" render={(props) => <About {...props} />} />\n\n        <Route path=\"/*\" render={(props) => { if (!isLoggedIn) return (<Redirect to=\"/login\"></Redirect>) }} />\n      </Router>\n    </div>\n\n  );\n\n  /*------------------------*/\n  /*-- Database Functions --*/\n  /*------------------------*/\n\n\t/**\n\t * Returns the players from our Mongo Database.\n\t */\n  function DB_getPlayers() {\n    API.getPlayers()\t//Call the getPlayers() method off of our API object, which was imported from Utils.\n      .then(db_players => {\t\t//Then, with the retrieved data, ...\n        console.log(db_players);\n        setPlayers(db_players);\t\t//Set our players state to the retrieved data.\n      }\n      )\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  /*-----------------------*/\n  /*-- Handler Functions --*/\n  /*-----------------------*/\n\n\t/** Handle Login Input Change\n\t * Updates the state of the login based on the input name and value\n\t * @param {Object} event - If an object, the change event fired when the input value is changed.\n\t * @param {String} event - If a string, the value to be set to the email.\n\t */\n  function handleLoginInputChange(event) {\n\n    const { target } = event;\t\t//Pull the target off of our event.\n    const value = target.value;\t\t//Set a reference for our target's value (the user's input).\n    const { name } = target;\t\t//Pull the name off of our target (the element to be changed by the input).\n\n    setLoginInfo({ ...loginInfo, [name]: value });\t\t//Set the key of 'name' to the value of 'value', so the user's input alters their login info.\n  }\n\n\t/** Handle Download\n\t * This does not download the game, but instead sets a reference within the local storage that we have downloaded the game.\n\t * @param {Object} event - The fired event from the action.\n\t */\n  function handleDownload(event) {\n\n    localStorage.setItem(\"hasDownloaded\", true);\t\t//Set an item in localStorage so we can reference it later to check if the user has downloaded the game.\n\n    //If 'hasDownloaded' is not already true, then set it to true.\n    if (hasDownloaded !== true) {\n      setHasDownloaded(true);\t\t//Alter the state of 'hasDownloaded' to true\n    }\n  }\n\n\t/** Handle Download Lost\n\t * This is fired if the user needs to download the game again.  The local storage 'hasDownloaded' item is removed.\n\t * @param {Object} event - The fired event from the action.\n\t */\n  function handleDownloadLost(event) {\n\n    localStorage.removeItem(\"hasDownloaded\");\t\t//Remove the item 'hasDownloaded' so we can reference it later to check that the user has NOT downloaded the game.\n\n    //If 'hasDownloaded' is not already false, then set it to false.\n    if (hasDownloaded !== false) {\n      setHasDownloaded(false);\t\t//Alter the state of 'hasDownloaded to false.\n    }\n  }\n\n  function handleCopyAccessToken(target) {\n    if (target) {\n      if (target.id !== \"data-token\") {\n        console.log(\"We did not click on the button\");\n\n        handleCopyAccessToken(target.parentNode);\n      }\n      else {\n        const atr = target.getAttribute(\"data-token\");\n\n        const dummyTextArea = document.createElement(\"textarea\");\n\n        dummyTextArea.value = atr;\n        document.body.appendChild(dummyTextArea);\n        dummyTextArea.select();\n\n        document.execCommand('copy');\n        document.body.removeChild(dummyTextArea);\n\n        console.log(\"Copied to clipboard!\");\n\n        setTimeout(() => {\n          setConnection({ accessToken: null });\n        }, 2000)\n\n      }\n    }\n\n  };\n\n  /*-----------------------*/\n  /*--- Check Functions ---*/\n  /*-----------------------*/\n\n\t/** Check If Downloaded\n\t * This function checks our local storage to see if the item 'hasDownloaded' exists.\n\t * Sets our state 'hasDownloaded' to the result of this check.\n\t */\n  function checkIfDownloaded() {\n\n    const localHasDownload = localStorage.getItem(\"hasDownloaded\");\t\t//Get, and set a reference to, the item 'hasDownloaded', if it exists.\n\n    //If the item exists, then the player has downloaded the game before.\n    if (localHasDownload) {\n      setHasDownloaded(true);\t\t\t//sets our state 'hasDownloaded' to true\n    }\n    else {\n      //If 'hasDownloaded' is not already set to false, then set it to false.\n      if (hasDownloaded !== false) {\n        setHasDownloaded(false);\t\t//Sets our state 'hasDownloaded' to false.\n      }\n    }\n  }\n\n\t/** Check if Registered\n\t * Upon start up, checks if the user is logged in by checking the local storage.\n\t * @returns true if the user is logged in, false if not.\n\t */\n  function checkIfRegistered() {\n\n    const localLogin = localStorage.getItem(\"registered\");\t\t//Get, and set a reference to, item 'registered', if it exists.\n\n    //If we got the item, then...\n    if (localLogin) {\n      setIsRegistered(true);\t\t//Set is registered to true.\n    }\n    else {\n      console.warn(\"!\".repeat(60));\n      console.warn(\"Setting isRegistered to true for testing\");\n      console.warn(\"!\".repeat(60));\n      setIsRegistered(true);\n    }\n  }\n\n  /*-----------------------*/\n  /*------ AWS Autho ------*/\n  /*-----------------------*/\n\n\t/**\n\t * Uses AWS Amplify to sign in a returning user.\n\t * @param {Object} event - The event fired with the action.\n\t */\n  function AUTHO_signIn(event) {\n    event.preventDefault();\t\t//Prevent the default action of the event.\n\n    console.warn(\"!\".repeat(60));\n    console.warn(\"Setting isRegistered to true for testing\");\n    console.warn(\"!\".repeat(60));\n\n    //If the user is registered, then...\n    if (isRegistered /* Checked on 'useEffect' */) {\n      //If we have login info, then...\n      if (loginInfo /* Updated upon user input */) {\n        //If we have a username and password, then...\n        if (loginInfo.username && loginInfo.password) {\n          const username = loginInfo.username;\n          const password = loginInfo.password;\n\n          //Use AWS Amplify to attempt to sign in our user.\n          Auth.signIn(username, password)\n            .then(user => {\t\t//If successful, then...\n              AUTHO_RegisterUser(username);\t\t//Register the user into the local storage.\n              setIsLoggedIn(true);\t\t\t\t//Set our state 'isLoggedIn' to true.\n            })\n            .catch(err => {\t\t//If unsuccessful, then...\n              console.log(err);\n            });\n        }\n      }\n    }\n    //ELSE the user has never registered, so...\n    else {\n\n      const username = \"AstroBeef\";\n      const password = \"00000000\";\n      const email = \"brian.g.graf@gmail.com\";\n\n\n      //SIGN UP USER\n      Auth.signUp({\n        username,\n        password,\n        attributes: {\n          email\n        },\n        validationData: []\n      }).then(data => console.log(data)).catch(err => console.log(err));\n    }\n  }\n\n\t/**\n\t * Use AWS Amplify to sign out the user.  Change our state as well.\n\t */\n  function AUTHO_signOut() {\n    //Use the 'signOut' method off of AWS Amplify Authentication.\n    Auth.signOut()\n      .then(data => {\t\t//If successful, then...\n        setIsLoggedIn(false);\t\t//Set our 'isLoggedIn' state to false.\n      })\n      //If unsucessful, then log error.\n      .catch(err => console.log(err))\n  }\n\n\t/**\n\t * Uses AWS Amplify to check if there is a user logged in.  If yes, then register the user to the local storage.\n\t */\n  function AUTHO_checkUser() {\n\n    //Use the method off of AWS Amplify Authentication\n    Auth.currentAuthenticatedUser()\n      .then(user => {\n        //User IS logged in.\n\n        //If our state is not already set to true, then...\n        if (isLoggedIn !== true) {\n          setIsLoggedIn(true);\t\t//Set state to true.\n        }\n\n        //If our 'isRegistered' state is not already set to true, then...\n        if (isRegistered !== true) {\n          AUTHO_RegisterUser(user.username);\t\t//Register our user into our local storage.\n        }\n      })\n      .catch(err => {\n        //User is NOT logged in.\n        console.log(err);\n\n        //If our state is not already set to false, then...\n        if (isLoggedIn !== false) {\n          setIsLoggedIn(false);\t\t//Set state to false.\n        }\n\n        //If our 'isRegistered' state is not already set to true, then...\n        if (isRegistered !== true) {\n          checkIfRegistered();\t\t//Check if the user is registered.\n        }\n      })\n  }\n\n\t/**\n\t * Sets a reference to the user in local storage so we can know the user has registered.\n\t * @param {String} username - The username of the current user.\n\t */\n  function AUTHO_RegisterUser(username) {\n    localStorage.setItem(\"registered\", username);\t\t//Set an item 'registered' in our local storage so we may check it later.\n    setIsRegistered(true);\t\t//Set our state 'isRegistered' to true.\n  }\n}\n\nexport default App;\n","// WARNING: DO NOT EDIT. This file is automatically generated by AWS Amplify. It will be overwritten.\n\nconst awsmobile = {\n    \"aws_project_region\": \"us-west-2\",\n    \"aws_cognito_identity_pool_id\": \"us-west-2:d48f9b4c-4c1b-49f2-b430-bf4c88376e71\",\n    \"aws_cognito_region\": \"us-west-2\",\n    \"aws_user_pools_id\": \"us-west-2_4cvqCwkth\",\n    \"aws_user_pools_web_client_id\": \"25ov25rr8a1v03g8j6s1edc3rq\",\n    \"oauth\": {\n        \"domain\": \"unitynodeauth9f7ddbe2-9f7ddbe2-local.auth.us-west-2.amazoncognito.com\",\n        \"scope\": [\n            \"phone\",\n            \"email\",\n            \"openid\",\n            \"profile\",\n            \"aws.cognito.signin.user.admin\"\n        ],\n        \"redirectSignIn\": \"http://localhost:3000/\",\n        \"redirectSignOut\": \"http://localhost:3000/\",\n        \"responseType\": \"code\"\n    },\n    \"federationTarget\": \"COGNITO_USER_POOLS\"\n};\n\n\nexport default awsmobile;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport Amplify from \"aws-amplify\";\nimport config from \"./aws-exports\";\nAmplify.configure(config);\n\n// import * as serviceWorker from './react-serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.register();\n"],"sourceRoot":""}